{
  "uid" : "81ff82df567fd34c",
  "name" : "test_web_be_api_url[argvals3]",
  "fullName" : "test_api.test_web_be_api.Test_Web_BE_URL#test_web_be_api_url",
  "historyId" : "e7fa5538189f939db2d2a7adb6439db5",
  "time" : {
    "start" : 1626841146160,
    "stop" : 1626841146367,
    "duration" : 207
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:32\"\u001B[0m\u001B[93m in test_web_be_api_url()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:29\u001B[0m\u001B[91m\", in test_web_be_api_url()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tExpected message: The code field is required. and actual message: The given data was invalid. not matching\u001B[0m\n            delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],",
  "statusTrace" : "self = <test_api.test_web_be_api.Test_Web_BE_URL object at 0x10264bbe0>\nargvals = {'Code': '', 'Endpoint': '/v1/api/sso/callback', 'ExpectedMessage': 'The code field is required.', 'ExpectedStatusCode': 422.0, ...}\n\n    @pytest.mark.apitest\n    @allure.story(\"CBT-303 Web BE API testing\")\n    @pytest.mark.parametrize(\"argvals\", getcelldata(\"web_Be_Test\", constants.DATASHEETPATH))\n    def test_web_be_api_url(self, argvals):\n        with allure.step(\"Validating Web BE API\"):\n            logger.info(\"test_web_be_api_url started\")\n            print(\"Inside test_web_be_api_url function\")\n            api_res = self.get(host=constants.QA_WAPI_BE_HOST, endpoint=argvals['Endpoint'], headers=None, expected_status_code=argvals['ExpectedStatusCode'], params={'code':f\"{argvals['Code']}\"})\n            rs_json = api_res.json()\n            logger.info(api_res.json())\n            if api_res.status_code != 200:\n                code = rs_json['errors']['code'][0]\n            else:\n                code = rs_json['data'][0]\n            print(f\"data: {code}\")\n            delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],\n                                   f\"Expected message: {argvals['ExpectedMessage']} and actual message: {rs_json['message']} not matching\")\n            # print(\"After test_web_be_api_url function\")\n>           delayed_assert.assert_expectations()\n\ntest_web_be_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def assert_expectations():\n        'raise an assert if there are any failed expectations'\n        if _failed_expectations:\n>           assert False, _report_failures()\nE           AssertionError: \u001B[93m\nE           \nE           assert_expectations() called at\u001B[0m\nE           \u001B[4m\u001B[94m\"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:32\"\u001B[0m\u001B[93m in test_web_be_api_url()\nE           \nE           \u001B[91m\u001B[4mFailed Expectations : 1\nE           \u001B[0m\nE           1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:29\u001B[0m\u001B[91m\", in test_web_be_api_url()\nE           \t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tExpected message: The code field is required. and actual message: The given data was invalid. not matching\u001B[0m\nE                       delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],\n\n../../../../PycharmProjects/Framework_Web/venv_framework/lib/python3.8/site-packages/delayed_assert/delayed_assert.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_fixture",
    "time" : {
      "start" : 1626841146159,
      "stop" : 1626841146159,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Base Fixture Setup",
      "time" : {
        "start" : 1626841146159,
        "stop" : 1626841146159,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Finishing up",
      "time" : {
        "start" : 1626841146159,
        "stop" : 1626841146373,
        "duration" : 214
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:32\"\u001B[0m\u001B[93m in test_web_be_api_url()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:29\u001B[0m\u001B[91m\", in test_web_be_api_url()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tExpected message: The code field is required. and actual message: The given data was invalid. not matching\u001B[0m\n            delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],",
    "statusTrace" : "self = <test_api.test_web_be_api.Test_Web_BE_URL object at 0x10264bbe0>\nargvals = {'Code': '', 'Endpoint': '/v1/api/sso/callback', 'ExpectedMessage': 'The code field is required.', 'ExpectedStatusCode': 422.0, ...}\n\n    @pytest.mark.apitest\n    @allure.story(\"CBT-303 Web BE API testing\")\n    @pytest.mark.parametrize(\"argvals\", getcelldata(\"web_Be_Test\", constants.DATASHEETPATH))\n    def test_web_be_api_url(self, argvals):\n        with allure.step(\"Validating Web BE API\"):\n            logger.info(\"test_web_be_api_url started\")\n            print(\"Inside test_web_be_api_url function\")\n            api_res = self.get(host=constants.QA_WAPI_BE_HOST, endpoint=argvals['Endpoint'], headers=None, expected_status_code=argvals['ExpectedStatusCode'], params={'code':f\"{argvals['Code']}\"})\n            rs_json = api_res.json()\n            logger.info(api_res.json())\n            if api_res.status_code != 200:\n                code = rs_json['errors']['code'][0]\n            else:\n                code = rs_json['data'][0]\n            print(f\"data: {code}\")\n            delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],\n                                   f\"Expected message: {argvals['ExpectedMessage']} and actual message: {rs_json['message']} not matching\")\n            # print(\"After test_web_be_api_url function\")\n>           delayed_assert.assert_expectations()\n\ntest_web_be_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def assert_expectations():\n        'raise an assert if there are any failed expectations'\n        if _failed_expectations:\n>           assert False, _report_failures()\nE           AssertionError: \u001B[93m\nE           \nE           assert_expectations() called at\u001B[0m\nE           \u001B[4m\u001B[94m\"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:32\"\u001B[0m\u001B[93m in test_web_be_api_url()\nE           \nE           \u001B[91m\u001B[4mFailed Expectations : 1\nE           \u001B[0m\nE           1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:29\u001B[0m\u001B[91m\", in test_web_be_api_url()\nE           \t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tExpected message: The code field is required. and actual message: The given data was invalid. not matching\u001B[0m\nE                       delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],\n\n../../../../PycharmProjects/Framework_Web/venv_framework/lib/python3.8/site-packages/delayed_assert/delayed_assert.py:74: AssertionError",
    "steps" : [ {
      "name" : "Validating Web BE API",
      "time" : {
        "start" : 1626841146160,
        "stop" : 1626841146367,
        "duration" : 207
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:32\"\u001B[0m\u001B[93m in test_web_be_api_url()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py:29\u001B[0m\u001B[91m\", in test_web_be_api_url()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tExpected message: The code field is required. and actual message: The given data was invalid. not matching\u001B[0m\n            delayed_assert.expect(argvals['ExpectedMessage'] == rs_json['message'],\n\n",
      "statusTrace" : "  File \"/Users/neerajsharma/AutomationProjects/IndependentAutomation/framework_webtesting/test_api/test_web_be_api.py\", line 32, in test_web_be_api_url\n    delayed_assert.assert_expectations()\n  File \"/Users/neerajsharma/PycharmProjects/Framework_Web/venv_framework/lib/python3.8/site-packages/delayed_assert/delayed_assert.py\", line 74, in assert_expectations\n    assert False, _report_failures()\n",
      "steps" : [ {
        "name" : "Making a get call for endpoint /v1/api/sso/callback",
        "time" : {
          "start" : 1626841146160,
          "stop" : 1626841146361,
          "duration" : 201
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Validate https Status Code for get api",
          "time" : {
            "start" : 1626841146358,
            "stop" : 1626841146361,
            "duration" : 3
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d345b1398c76c331",
      "name" : "log",
      "source" : "d345b1398c76c331.txt",
      "type" : "text/plain",
      "size" : 513
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "base_fixture::0",
    "time" : {
      "start" : 1626841146373,
      "stop" : 1626841146373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Quiting Browser",
      "time" : {
        "start" : 1626841146373,
        "stop" : 1626841146373,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "CBT-303 Web BE API testing"
  }, {
    "name" : "tag",
    "value" : "apitest"
  }, {
    "name" : "parentSuite",
    "value" : "test_api"
  }, {
    "name" : "suite",
    "value" : "test_web_be_api"
  }, {
    "name" : "subSuite",
    "value" : "Test_Web_BE_URL"
  }, {
    "name" : "host",
    "value" : "neerajs-mbp-2.lan"
  }, {
    "name" : "thread",
    "value" : "23640-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_api.test_web_be_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "argvals",
    "value" : "{'Runmode': 'Y', 'Endpoint': '/v1/api/sso/callback', 'Code': '', 'ExpectedStatusCode': 422.0, 'ExpectedMessage': 'The code field is required.'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "apitest" ]
  },
  "source" : "81ff82df567fd34c.json",
  "parameterValues" : [ "{'Runmode': 'Y', 'Endpoint': '/v1/api/sso/callback', 'Code': '', 'ExpectedStatusCode': 422.0, 'ExpectedMessage': 'The code field is required.'}" ]
}